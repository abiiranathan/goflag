// Code generated by genc. DO NOT EDIT.

package goflag

import (
	"github.com/google/uuid"
	"net"
	"net/url"
	"time"
)

// Get the value of a flag as a bool. Panics if the flag is not found or the value is not a bool.
func (ctx *Context) GetBool(name string) bool {
	return ctx.Get(name).(bool)
}

func (cmd *subcommand) GetBool(name string) bool {
	return cmd.Get(name).(bool)
}

// Get the value of a flag as a string. Panics if the flag is not found or the value is not a string.
func (ctx *Context) GetDirPath(name string) string {
	return ctx.Get(name).(string)
}

func (cmd *subcommand) GetDirPath(name string) string {
	return cmd.Get(name).(string)
}

// Get the value of a flag as a time.Duration. Panics if the flag is not found or the value is not a time.Duration.
func (ctx *Context) GetDuration(name string) time.Duration {
	return ctx.Get(name).(time.Duration)
}

func (cmd *subcommand) GetDuration(name string) time.Duration {
	return cmd.Get(name).(time.Duration)
}

// Get the value of a flag as a string. Panics if the flag is not found or the value is not a string.
func (ctx *Context) GetEmail(name string) string {
	return ctx.Get(name).(string)
}

func (cmd *subcommand) GetEmail(name string) string {
	return cmd.Get(name).(string)
}

// Get the value of a flag as a string. Panics if the flag is not found or the value is not a string.
func (ctx *Context) GetFilePath(name string) string {
	return ctx.Get(name).(string)
}

func (cmd *subcommand) GetFilePath(name string) string {
	return cmd.Get(name).(string)
}

// Get the value of a flag as a float32. Panics if the flag is not found or the value is not a float32.
func (ctx *Context) GetFloat32(name string) float32 {
	return ctx.Get(name).(float32)
}

func (cmd *subcommand) GetFloat32(name string) float32 {
	return cmd.Get(name).(float32)
}

// Get the value of a flag as a float64. Panics if the flag is not found or the value is not a float64.
func (ctx *Context) GetFloat64(name string) float64 {
	return ctx.Get(name).(float64)
}

func (cmd *subcommand) GetFloat64(name string) float64 {
	return cmd.Get(name).(float64)
}

// Get the value of a flag as a string. Panics if the flag is not found or the value is not a string.
func (ctx *Context) GetHostPortPair(name string) string {
	return ctx.Get(name).(string)
}

func (cmd *subcommand) GetHostPortPair(name string) string {
	return cmd.Get(name).(string)
}

// Get the value of a flag as a net.IP. Panics if the flag is not found or the value is not a net.IP.
func (ctx *Context) GetIP(name string) net.IP {
	return ctx.Get(name).(net.IP)
}

func (cmd *subcommand) GetIP(name string) net.IP {
	return cmd.Get(name).(net.IP)
}

// Get the value of a flag as a int. Panics if the flag is not found or the value is not a int.
func (ctx *Context) GetInt(name string) int {
	return ctx.Get(name).(int)
}

func (cmd *subcommand) GetInt(name string) int {
	return cmd.Get(name).(int)
}

// Get the value of a flag as a int64. Panics if the flag is not found or the value is not a int64.
func (ctx *Context) GetInt64(name string) int64 {
	return ctx.Get(name).(int64)
}

func (cmd *subcommand) GetInt64(name string) int64 {
	return cmd.Get(name).(int64)
}

// Get the value of a flag as a []int. Panics if the flag is not found or the value is not a []int.
func (ctx *Context) GetIntSlice(name string) []int {
	return ctx.Get(name).([]int)
}

func (cmd *subcommand) GetIntSlice(name string) []int {
	return cmd.Get(name).([]int)
}

// Get the value of a flag as a net.HardwareAddr. Panics if the flag is not found or the value is not a net.HardwareAddr.
func (ctx *Context) GetMAC(name string) net.HardwareAddr {
	return ctx.Get(name).(net.HardwareAddr)
}

func (cmd *subcommand) GetMAC(name string) net.HardwareAddr {
	return cmd.Get(name).(net.HardwareAddr)
}

// Get the value of a flag as a rune. Panics if the flag is not found or the value is not a rune.
func (ctx *Context) GetRune(name string) rune {
	return ctx.Get(name).(rune)
}

func (cmd *subcommand) GetRune(name string) rune {
	return cmd.Get(name).(rune)
}

// Get the value of a flag as a string. Panics if the flag is not found or the value is not a string.
func (ctx *Context) GetString(name string) string {
	return ctx.Get(name).(string)
}

func (cmd *subcommand) GetString(name string) string {
	return cmd.Get(name).(string)
}

// Get the value of a flag as a []string. Panics if the flag is not found or the value is not a []string.
func (ctx *Context) GetStringSlice(name string) []string {
	return ctx.Get(name).([]string)
}

func (cmd *subcommand) GetStringSlice(name string) []string {
	return cmd.Get(name).([]string)
}

// Get the value of a flag as a time.Time. Panics if the flag is not found or the value is not a time.Time.
func (ctx *Context) GetTime(name string) time.Time {
	return ctx.Get(name).(time.Time)
}

func (cmd *subcommand) GetTime(name string) time.Time {
	return cmd.Get(name).(time.Time)
}

// Get the value of a flag as a *url.URL. Panics if the flag is not found or the value is not a *url.URL.
func (ctx *Context) GetURL(name string) *url.URL {
	return ctx.Get(name).(*url.URL)
}

func (cmd *subcommand) GetURL(name string) *url.URL {
	return cmd.Get(name).(*url.URL)
}

// Get the value of a flag as a uuid.UUID. Panics if the flag is not found or the value is not a uuid.UUID.
func (ctx *Context) GetUUID(name string) uuid.UUID {
	return ctx.Get(name).(uuid.UUID)
}

func (cmd *subcommand) GetUUID(name string) uuid.UUID {
	return cmd.Get(name).(uuid.UUID)
}
