// Code generated by "stringer -type FlagType"; DO NOT EDIT.

package goflag

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FlagString-0]
	_ = x[FlagInt-1]
	_ = x[FlagInt64-2]
	_ = x[FlagFloat32-3]
	_ = x[FlagFloat64-4]
	_ = x[FlagBool-5]
	_ = x[FlagRune-6]
	_ = x[FlagDuration-7]
	_ = x[FlagStringSlice-8]
	_ = x[FlagIntSlice-9]
	_ = x[FlagTime-10]
	_ = x[FlagIP-11]
	_ = x[FlagMAC-12]
	_ = x[FlagURL-13]
	_ = x[FlagUUID-14]
	_ = x[FlagHostPortPair-15]
	_ = x[FlagEmail-16]
	_ = x[FlagFilePath-17]
	_ = x[FlagDirPath-18]
}

const _FlagType_name = "FlagStringFlagIntFlagInt64FlagFloat32FlagFloat64FlagBoolFlagRuneFlagDurationFlagStringSliceFlagIntSliceFlagTimeFlagIPFlagMACFlagURLFlagUUIDFlagHostPortPairFlagEmailFlagFilePathFlagDirPath"

var _FlagType_index = [...]uint8{0, 10, 17, 26, 37, 48, 56, 64, 76, 91, 103, 111, 117, 124, 131, 139, 155, 164, 176, 187}

func (i FlagType) String() string {
	if i < 0 || i >= FlagType(len(_FlagType_index)-1) {
		return "FlagType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FlagType_name[_FlagType_index[i]:_FlagType_index[i+1]]
}
