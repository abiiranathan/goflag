// Code generated by "stringer -type flagType"; DO NOT EDIT.

package goflag

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[flagString-0]
	_ = x[flagInt-1]
	_ = x[flagInt64-2]
	_ = x[flagFloat32-3]
	_ = x[flagFloat64-4]
	_ = x[flagBool-5]
	_ = x[flagRune-6]
	_ = x[flagDuration-7]
	_ = x[flagStringSlice-8]
	_ = x[flagIntSlice-9]
	_ = x[flagTime-10]
	_ = x[flagIP-11]
	_ = x[flagMAC-12]
	_ = x[flagURL-13]
	_ = x[flagUUID-14]
	_ = x[flagHostPortPair-15]
	_ = x[flagEmail-16]
	_ = x[flagFilePath-17]
	_ = x[flagDirPath-18]
}

const _flagType_name = "flagStringflagIntflagInt64flagFloat32flagFloat64flagBoolflagRuneflagDurationflagStringSliceflagIntSliceflagTimeflagIPflagMACflagURLflagUUIDflagHostPortPairflagEmailflagFilePathflagDirPath"

var _flagType_index = [...]uint8{0, 10, 17, 26, 37, 48, 56, 64, 76, 91, 103, 111, 117, 124, 131, 139, 155, 164, 176, 187}

func (i flagType) String() string {
	if i < 0 || i >= flagType(len(_flagType_index)-1) {
		return "flagType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _flagType_name[_flagType_index[i]:_flagType_index[i+1]]
}
